from collections import OrderedDict
import argparse
import matplotlib.pyplot as plt
import numpy as np

def main():
    parser = argparse.ArgumentParser(description='Plots CSV files generated by analyze_sequential.py')
    parser.add_argument('csvfiles', type=str, nargs='+',
                        help='CSV files to plot')

    fig, ax = plt.subplots()

    args = parser.parse_args()
    N = len(args.csvfiles)
    no_madvise = []
    devs1 = []
    with_madvise = []
    devs2 = []
    workloads = []
    for fname in args.csvfiles:
        with open(fname) as f:
            lines = f.read().strip().split('\n')
            workloads.append(lines[0])
            parts = lines[-1].split(',')
            no_madvise.append(float(parts[0]))
            with_madvise.append(float(parts[1]))
            devs1.append(float(parts[2]))
            devs2.append(float(parts[3]))
    ind = np.arange(N)
    width = 0.35
    rects1 = ax.bar(ind, no_madvise, width, color='r', yerr=devs1)
    rects2 = ax.bar(ind+width, with_madvise, width, color='y', yerr=devs2)
    ax.set_title('Sequential workloads running times')
    ax.set_ylabel('Time (s)')
    ax.set_xticks(ind + width)
    ax.set_xticklabels(workloads)
    ax.legend( (rects1[0], rects2[0]), ('No madvise', 'With madvise'), loc=4)

    def autolabel(rects):
        # attach some text labels
        for rect in rects:
            height = rect.get_height()
            ax.text(rect.get_x()+rect.get_width()/2., height+14, '%d s'%int(height),
                    ha='center', va='bottom')
    autolabel(rects1)
    autolabel(rects2)
    plt.show()
if __name__ == '__main__':
    main()
